// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/karlchen.proto

package api

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MemberEventType int32

const (
	MemberEventType_JOIN_TABLE  MemberEventType = 0
	MemberEventType_LEAVE_TABLE MemberEventType = 1
	MemberEventType_GO_OFFLINE  MemberEventType = 2
	MemberEventType_GO_ONLINE   MemberEventType = 3
)

var MemberEventType_name = map[int32]string{
	0: "JOIN_TABLE",
	1: "LEAVE_TABLE",
	2: "GO_OFFLINE",
	3: "GO_ONLINE",
}

var MemberEventType_value = map[string]int32{
	"JOIN_TABLE":  0,
	"LEAVE_TABLE": 1,
	"GO_OFFLINE":  2,
	"GO_ONLINE":   3,
}

func (x MemberEventType) String() string {
	return proto.EnumName(MemberEventType_name, int32(x))
}

func (MemberEventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{0}
}

type TablePhase int32

const (
	TablePhase_NOT_STARTED   TablePhase = 0
	TablePhase_PLAYING       TablePhase = 1
	TablePhase_BETWEEN_GAMES TablePhase = 2
	TablePhase_TABLE_ENDED   TablePhase = 3
)

var TablePhase_name = map[int32]string{
	0: "NOT_STARTED",
	1: "PLAYING",
	2: "BETWEEN_GAMES",
	3: "TABLE_ENDED",
}

var TablePhase_value = map[string]int32{
	"NOT_STARTED":   0,
	"PLAYING":       1,
	"BETWEEN_GAMES": 2,
	"TABLE_ENDED":   3,
}

func (x TablePhase) String() string {
	return proto.EnumName(TablePhase_name, int32(x))
}

func (TablePhase) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{1}
}

type MatchPhase int32

const (
	MatchPhase_AUCTION  MatchPhase = 0
	MatchPhase_GAME     MatchPhase = 1
	MatchPhase_FINISHED MatchPhase = 2
)

var MatchPhase_name = map[int32]string{
	0: "AUCTION",
	1: "GAME",
	2: "FINISHED",
}

var MatchPhase_value = map[string]int32{
	"AUCTION":  0,
	"GAME":     1,
	"FINISHED": 2,
}

func (x MatchPhase) String() string {
	return proto.EnumName(MatchPhase_name, int32(x))
}

func (MatchPhase) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{2}
}

type Suit int32

const (
	Suit_DIAMONDS Suit = 0
	Suit_HEARTS   Suit = 1
	Suit_SPADES   Suit = 2
	Suit_CLUBS    Suit = 3
)

var Suit_name = map[int32]string{
	0: "DIAMONDS",
	1: "HEARTS",
	2: "SPADES",
	3: "CLUBS",
}

var Suit_value = map[string]int32{
	"DIAMONDS": 0,
	"HEARTS":   1,
	"SPADES":   2,
	"CLUBS":    3,
}

func (x Suit) String() string {
	return proto.EnumName(Suit_name, int32(x))
}

func (Suit) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{3}
}

type Rank int32

const (
	Rank_NINE  Rank = 0
	Rank_JACK  Rank = 1
	Rank_QUEEN Rank = 2
	Rank_KING  Rank = 3
	Rank_TEN   Rank = 4
	Rank_ACE   Rank = 5
)

var Rank_name = map[int32]string{
	0: "NINE",
	1: "JACK",
	2: "QUEEN",
	3: "KING",
	4: "TEN",
	5: "ACE",
}

var Rank_value = map[string]int32{
	"NINE":  0,
	"JACK":  1,
	"QUEEN": 2,
	"KING":  3,
	"TEN":   4,
	"ACE":   5,
}

func (x Rank) String() string {
	return proto.EnumName(Rank_name, int32(x))
}

func (Rank) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{4}
}

type Party int32

const (
	Party_RE     Party = 0
	Party_CONTRA Party = 1
)

var Party_name = map[int32]string{
	0: "RE",
	1: "CONTRA",
}

var Party_value = map[string]int32{
	"RE":     0,
	"CONTRA": 1,
}

func (x Party) String() string {
	return proto.EnumName(Party_name, int32(x))
}

func (Party) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{5}
}

type BidType int32

const (
	BidType_RE_BID           BidType = 0
	BidType_CONTRA_BID       BidType = 1
	BidType_RE_NO_NINETY     BidType = 2
	BidType_RE_NO_SIXTY      BidType = 3
	BidType_RE_NO_THIRTY     BidType = 4
	BidType_RE_SCHWARZ       BidType = 5
	BidType_CONTRA_NO_NINETY BidType = 6
	BidType_CONTRA_NO_SIXTY  BidType = 7
	BidType_CONTRA_NO_THIRTY BidType = 8
	BidType_CONTRA_SCHWARZ   BidType = 9
)

var BidType_name = map[int32]string{
	0: "RE_BID",
	1: "CONTRA_BID",
	2: "RE_NO_NINETY",
	3: "RE_NO_SIXTY",
	4: "RE_NO_THIRTY",
	5: "RE_SCHWARZ",
	6: "CONTRA_NO_NINETY",
	7: "CONTRA_NO_SIXTY",
	8: "CONTRA_NO_THIRTY",
	9: "CONTRA_SCHWARZ",
}

var BidType_value = map[string]int32{
	"RE_BID":           0,
	"CONTRA_BID":       1,
	"RE_NO_NINETY":     2,
	"RE_NO_SIXTY":      3,
	"RE_NO_THIRTY":     4,
	"RE_SCHWARZ":       5,
	"CONTRA_NO_NINETY": 6,
	"CONTRA_NO_SIXTY":  7,
	"CONTRA_NO_THIRTY": 8,
	"CONTRA_SCHWARZ":   9,
}

func (x BidType) String() string {
	return proto.EnumName(BidType_name, int32(x))
}

func (BidType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{6}
}

type GameType int32

const (
	GameType_NORMAL_GAME   GameType = 0
	GameType_MARRIAGE      GameType = 1
	GameType_DIAMONDS_SOLO GameType = 2
	GameType_HEARTS_SOLO   GameType = 3
	GameType_SPADES_SOLO   GameType = 4
	GameType_CLUBS_SOLO    GameType = 5
	GameType_MEATLESS_SOLO GameType = 6
)

var GameType_name = map[int32]string{
	0: "NORMAL_GAME",
	1: "MARRIAGE",
	2: "DIAMONDS_SOLO",
	3: "HEARTS_SOLO",
	4: "SPADES_SOLO",
	5: "CLUBS_SOLO",
	6: "MEATLESS_SOLO",
}

var GameType_value = map[string]int32{
	"NORMAL_GAME":   0,
	"MARRIAGE":      1,
	"DIAMONDS_SOLO": 2,
	"HEARTS_SOLO":   3,
	"SPADES_SOLO":   4,
	"CLUBS_SOLO":    5,
	"MEATLESS_SOLO": 6,
}

func (x GameType) String() string {
	return proto.EnumName(GameType_name, int32(x))
}

func (GameType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{7}
}

type Card struct {
	Suit                 Suit     `protobuf:"varint,1,opt,name=suit,proto3,enum=api.Suit" json:"suit,omitempty"`
	Rank                 Rank     `protobuf:"varint,2,opt,name=rank,proto3,enum=api.Rank" json:"rank,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Card) Reset()         { *m = Card{} }
func (m *Card) String() string { return proto.CompactTextString(m) }
func (*Card) ProtoMessage()    {}
func (*Card) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{0}
}

func (m *Card) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Card.Unmarshal(m, b)
}
func (m *Card) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Card.Marshal(b, m, deterministic)
}
func (m *Card) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Card.Merge(m, src)
}
func (m *Card) XXX_Size() int {
	return xxx_messageInfo_Card.Size(m)
}
func (m *Card) XXX_DiscardUnknown() {
	xxx_messageInfo_Card.DiscardUnknown(m)
}

var xxx_messageInfo_Card proto.InternalMessageInfo

func (m *Card) GetSuit() Suit {
	if m != nil {
		return m.Suit
	}
	return Suit_DIAMONDS
}

func (m *Card) GetRank() Rank {
	if m != nil {
		return m.Rank
	}
	return Rank_NINE
}

type PlayerValue struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerValue) Reset()         { *m = PlayerValue{} }
func (m *PlayerValue) String() string { return proto.CompactTextString(m) }
func (*PlayerValue) ProtoMessage()    {}
func (*PlayerValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{1}
}

func (m *PlayerValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerValue.Unmarshal(m, b)
}
func (m *PlayerValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerValue.Marshal(b, m, deterministic)
}
func (m *PlayerValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerValue.Merge(m, src)
}
func (m *PlayerValue) XXX_Size() int {
	return xxx_messageInfo_PlayerValue.Size(m)
}
func (m *PlayerValue) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerValue.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerValue proto.InternalMessageInfo

func (m *PlayerValue) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type Declaration struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Vorbehalt            bool     `protobuf:"varint,2,opt,name=vorbehalt,proto3" json:"vorbehalt,omitempty"`
	DefinedGameMode      *Mode    `protobuf:"bytes,3,opt,name=definedGameMode,proto3" json:"definedGameMode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Declaration) Reset()         { *m = Declaration{} }
func (m *Declaration) String() string { return proto.CompactTextString(m) }
func (*Declaration) ProtoMessage()    {}
func (*Declaration) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{2}
}

func (m *Declaration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Declaration.Unmarshal(m, b)
}
func (m *Declaration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Declaration.Marshal(b, m, deterministic)
}
func (m *Declaration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Declaration.Merge(m, src)
}
func (m *Declaration) XXX_Size() int {
	return xxx_messageInfo_Declaration.Size(m)
}
func (m *Declaration) XXX_DiscardUnknown() {
	xxx_messageInfo_Declaration.DiscardUnknown(m)
}

var xxx_messageInfo_Declaration proto.InternalMessageInfo

func (m *Declaration) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Declaration) GetVorbehalt() bool {
	if m != nil {
		return m.Vorbehalt
	}
	return false
}

func (m *Declaration) GetDefinedGameMode() *Mode {
	if m != nil {
		return m.DefinedGameMode
	}
	return nil
}

type PlayedCard struct {
	UserId               string       `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Card                 *Card        `protobuf:"bytes,2,opt,name=card,proto3" json:"card,omitempty"`
	TrickWinner          *PlayerValue `protobuf:"bytes,3,opt,name=trick_winner,json=trickWinner,proto3" json:"trick_winner,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PlayedCard) Reset()         { *m = PlayedCard{} }
func (m *PlayedCard) String() string { return proto.CompactTextString(m) }
func (*PlayedCard) ProtoMessage()    {}
func (*PlayedCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{3}
}

func (m *PlayedCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayedCard.Unmarshal(m, b)
}
func (m *PlayedCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayedCard.Marshal(b, m, deterministic)
}
func (m *PlayedCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayedCard.Merge(m, src)
}
func (m *PlayedCard) XXX_Size() int {
	return xxx_messageInfo_PlayedCard.Size(m)
}
func (m *PlayedCard) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayedCard.DiscardUnknown(m)
}

var xxx_messageInfo_PlayedCard proto.InternalMessageInfo

func (m *PlayedCard) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *PlayedCard) GetCard() *Card {
	if m != nil {
		return m.Card
	}
	return nil
}

func (m *PlayedCard) GetTrickWinner() *PlayerValue {
	if m != nil {
		return m.TrickWinner
	}
	return nil
}

type Bid struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Bid                  BidType  `protobuf:"varint,3,opt,name=bid,proto3,enum=api.BidType" json:"bid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bid) Reset()         { *m = Bid{} }
func (m *Bid) String() string { return proto.CompactTextString(m) }
func (*Bid) ProtoMessage()    {}
func (*Bid) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{4}
}

func (m *Bid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bid.Unmarshal(m, b)
}
func (m *Bid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bid.Marshal(b, m, deterministic)
}
func (m *Bid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bid.Merge(m, src)
}
func (m *Bid) XXX_Size() int {
	return xxx_messageInfo_Bid.Size(m)
}
func (m *Bid) XXX_DiscardUnknown() {
	xxx_messageInfo_Bid.DiscardUnknown(m)
}

var xxx_messageInfo_Bid proto.InternalMessageInfo

func (m *Bid) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Bid) GetBid() BidType {
	if m != nil {
		return m.Bid
	}
	return BidType_RE_BID
}

type EndOfGame struct {
	Winner               Party    `protobuf:"varint,1,opt,name=winner,proto3,enum=api.Party" json:"winner,omitempty"`
	Value                int32    `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EndOfGame) Reset()         { *m = EndOfGame{} }
func (m *EndOfGame) String() string { return proto.CompactTextString(m) }
func (*EndOfGame) ProtoMessage()    {}
func (*EndOfGame) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{5}
}

func (m *EndOfGame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndOfGame.Unmarshal(m, b)
}
func (m *EndOfGame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndOfGame.Marshal(b, m, deterministic)
}
func (m *EndOfGame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndOfGame.Merge(m, src)
}
func (m *EndOfGame) XXX_Size() int {
	return xxx_messageInfo_EndOfGame.Size(m)
}
func (m *EndOfGame) XXX_DiscardUnknown() {
	xxx_messageInfo_EndOfGame.DiscardUnknown(m)
}

var xxx_messageInfo_EndOfGame proto.InternalMessageInfo

func (m *EndOfGame) GetWinner() Party {
	if m != nil {
		return m.Winner
	}
	return Party_RE
}

func (m *EndOfGame) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Event struct {
	// Types that are valid to be assigned to Event:
	//	*Event_Welcome
	//	*Event_Start
	//	*Event_Declared
	//	*Event_PlayedCard
	//	*Event_PlacedBid
	//	*Event_Ended
	//	*Event_Member
	Event                isEvent_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{6}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

type isEvent_Event interface {
	isEvent_Event()
}

type Event_Welcome struct {
	Welcome *UserState `protobuf:"bytes,1,opt,name=welcome,proto3,oneof"`
}

type Event_Start struct {
	Start *MatchState `protobuf:"bytes,2,opt,name=start,proto3,oneof"`
}

type Event_Declared struct {
	Declared *Declaration `protobuf:"bytes,3,opt,name=declared,proto3,oneof"`
}

type Event_PlayedCard struct {
	PlayedCard *PlayedCard `protobuf:"bytes,4,opt,name=played_card,json=playedCard,proto3,oneof"`
}

type Event_PlacedBid struct {
	PlacedBid *Bid `protobuf:"bytes,5,opt,name=placed_bid,json=placedBid,proto3,oneof"`
}

type Event_Ended struct {
	Ended *EndOfGame `protobuf:"bytes,6,opt,name=ended,proto3,oneof"`
}

type Event_Member struct {
	Member *MemberEvent `protobuf:"bytes,7,opt,name=member,proto3,oneof"`
}

func (*Event_Welcome) isEvent_Event() {}

func (*Event_Start) isEvent_Event() {}

func (*Event_Declared) isEvent_Event() {}

func (*Event_PlayedCard) isEvent_Event() {}

func (*Event_PlacedBid) isEvent_Event() {}

func (*Event_Ended) isEvent_Event() {}

func (*Event_Member) isEvent_Event() {}

func (m *Event) GetEvent() isEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *Event) GetWelcome() *UserState {
	if x, ok := m.GetEvent().(*Event_Welcome); ok {
		return x.Welcome
	}
	return nil
}

func (m *Event) GetStart() *MatchState {
	if x, ok := m.GetEvent().(*Event_Start); ok {
		return x.Start
	}
	return nil
}

func (m *Event) GetDeclared() *Declaration {
	if x, ok := m.GetEvent().(*Event_Declared); ok {
		return x.Declared
	}
	return nil
}

func (m *Event) GetPlayedCard() *PlayedCard {
	if x, ok := m.GetEvent().(*Event_PlayedCard); ok {
		return x.PlayedCard
	}
	return nil
}

func (m *Event) GetPlacedBid() *Bid {
	if x, ok := m.GetEvent().(*Event_PlacedBid); ok {
		return x.PlacedBid
	}
	return nil
}

func (m *Event) GetEnded() *EndOfGame {
	if x, ok := m.GetEvent().(*Event_Ended); ok {
		return x.Ended
	}
	return nil
}

func (m *Event) GetMember() *MemberEvent {
	if x, ok := m.GetEvent().(*Event_Member); ok {
		return x.Member
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Event) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Event_Welcome)(nil),
		(*Event_Start)(nil),
		(*Event_Declared)(nil),
		(*Event_PlayedCard)(nil),
		(*Event_PlacedBid)(nil),
		(*Event_Ended)(nil),
		(*Event_Member)(nil),
	}
}

type UserState struct {
	CurrentTable         *TableState `protobuf:"bytes,1,opt,name=currentTable,proto3" json:"currentTable,omitempty"`
	Name                 string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UserState) Reset()         { *m = UserState{} }
func (m *UserState) String() string { return proto.CompactTextString(m) }
func (*UserState) ProtoMessage()    {}
func (*UserState) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{7}
}

func (m *UserState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserState.Unmarshal(m, b)
}
func (m *UserState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserState.Marshal(b, m, deterministic)
}
func (m *UserState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserState.Merge(m, src)
}
func (m *UserState) XXX_Size() int {
	return xxx_messageInfo_UserState.Size(m)
}
func (m *UserState) XXX_DiscardUnknown() {
	xxx_messageInfo_UserState.DiscardUnknown(m)
}

var xxx_messageInfo_UserState proto.InternalMessageInfo

func (m *UserState) GetCurrentTable() *TableState {
	if m != nil {
		return m.CurrentTable
	}
	return nil
}

func (m *UserState) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type MemberEvent struct {
	UserId               string          `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name                 string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type                 MemberEventType `protobuf:"varint,3,opt,name=type,proto3,enum=api.MemberEventType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MemberEvent) Reset()         { *m = MemberEvent{} }
func (m *MemberEvent) String() string { return proto.CompactTextString(m) }
func (*MemberEvent) ProtoMessage()    {}
func (*MemberEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{8}
}

func (m *MemberEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemberEvent.Unmarshal(m, b)
}
func (m *MemberEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemberEvent.Marshal(b, m, deterministic)
}
func (m *MemberEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemberEvent.Merge(m, src)
}
func (m *MemberEvent) XXX_Size() int {
	return xxx_messageInfo_MemberEvent.Size(m)
}
func (m *MemberEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_MemberEvent.DiscardUnknown(m)
}

var xxx_messageInfo_MemberEvent proto.InternalMessageInfo

func (m *MemberEvent) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *MemberEvent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MemberEvent) GetType() MemberEventType {
	if m != nil {
		return m.Type
	}
	return MemberEventType_JOIN_TABLE
}

type PlayCardRequest struct {
	Table                string   `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Card                 *Card    `protobuf:"bytes,2,opt,name=card,proto3" json:"card,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayCardRequest) Reset()         { *m = PlayCardRequest{} }
func (m *PlayCardRequest) String() string { return proto.CompactTextString(m) }
func (*PlayCardRequest) ProtoMessage()    {}
func (*PlayCardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{9}
}

func (m *PlayCardRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayCardRequest.Unmarshal(m, b)
}
func (m *PlayCardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayCardRequest.Marshal(b, m, deterministic)
}
func (m *PlayCardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayCardRequest.Merge(m, src)
}
func (m *PlayCardRequest) XXX_Size() int {
	return xxx_messageInfo_PlayCardRequest.Size(m)
}
func (m *PlayCardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayCardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlayCardRequest proto.InternalMessageInfo

func (m *PlayCardRequest) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *PlayCardRequest) GetCard() *Card {
	if m != nil {
		return m.Card
	}
	return nil
}

type PlaceBidRequest struct {
	Table                string   `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Bid                  BidType  `protobuf:"varint,2,opt,name=bid,proto3,enum=api.BidType" json:"bid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlaceBidRequest) Reset()         { *m = PlaceBidRequest{} }
func (m *PlaceBidRequest) String() string { return proto.CompactTextString(m) }
func (*PlaceBidRequest) ProtoMessage()    {}
func (*PlaceBidRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{10}
}

func (m *PlaceBidRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlaceBidRequest.Unmarshal(m, b)
}
func (m *PlaceBidRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlaceBidRequest.Marshal(b, m, deterministic)
}
func (m *PlaceBidRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlaceBidRequest.Merge(m, src)
}
func (m *PlaceBidRequest) XXX_Size() int {
	return xxx_messageInfo_PlaceBidRequest.Size(m)
}
func (m *PlaceBidRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlaceBidRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlaceBidRequest proto.InternalMessageInfo

func (m *PlaceBidRequest) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *PlaceBidRequest) GetBid() BidType {
	if m != nil {
		return m.Bid
	}
	return BidType_RE_BID
}

type DeclareRequest struct {
	Table                string   `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Declaration          GameType `protobuf:"varint,2,opt,name=declaration,proto3,enum=api.GameType" json:"declaration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeclareRequest) Reset()         { *m = DeclareRequest{} }
func (m *DeclareRequest) String() string { return proto.CompactTextString(m) }
func (*DeclareRequest) ProtoMessage()    {}
func (*DeclareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{11}
}

func (m *DeclareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeclareRequest.Unmarshal(m, b)
}
func (m *DeclareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeclareRequest.Marshal(b, m, deterministic)
}
func (m *DeclareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeclareRequest.Merge(m, src)
}
func (m *DeclareRequest) XXX_Size() int {
	return xxx_messageInfo_DeclareRequest.Size(m)
}
func (m *DeclareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeclareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeclareRequest proto.InternalMessageInfo

func (m *DeclareRequest) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *DeclareRequest) GetDeclaration() GameType {
	if m != nil {
		return m.Declaration
	}
	return GameType_NORMAL_GAME
}

type AuctionState struct {
	Declarations         []*Declaration `protobuf:"bytes,1,rep,name=declarations,proto3" json:"declarations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *AuctionState) Reset()         { *m = AuctionState{} }
func (m *AuctionState) String() string { return proto.CompactTextString(m) }
func (*AuctionState) ProtoMessage()    {}
func (*AuctionState) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{12}
}

func (m *AuctionState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuctionState.Unmarshal(m, b)
}
func (m *AuctionState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuctionState.Marshal(b, m, deterministic)
}
func (m *AuctionState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuctionState.Merge(m, src)
}
func (m *AuctionState) XXX_Size() int {
	return xxx_messageInfo_AuctionState.Size(m)
}
func (m *AuctionState) XXX_DiscardUnknown() {
	xxx_messageInfo_AuctionState.DiscardUnknown(m)
}

var xxx_messageInfo_AuctionState proto.InternalMessageInfo

func (m *AuctionState) GetDeclarations() []*Declaration {
	if m != nil {
		return m.Declarations
	}
	return nil
}

type Mode struct {
	Type                 GameType     `protobuf:"varint,1,opt,name=type,proto3,enum=api.GameType" json:"type,omitempty"`
	Soloist              *PlayerValue `protobuf:"bytes,2,opt,name=soloist,proto3" json:"soloist,omitempty"`
	Spouse               *PlayerValue `protobuf:"bytes,3,opt,name=spouse,proto3" json:"spouse,omitempty"`
	Forehand             string       `protobuf:"bytes,4,opt,name=forehand,proto3" json:"forehand,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Mode) Reset()         { *m = Mode{} }
func (m *Mode) String() string { return proto.CompactTextString(m) }
func (*Mode) ProtoMessage()    {}
func (*Mode) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{13}
}

func (m *Mode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Mode.Unmarshal(m, b)
}
func (m *Mode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Mode.Marshal(b, m, deterministic)
}
func (m *Mode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mode.Merge(m, src)
}
func (m *Mode) XXX_Size() int {
	return xxx_messageInfo_Mode.Size(m)
}
func (m *Mode) XXX_DiscardUnknown() {
	xxx_messageInfo_Mode.DiscardUnknown(m)
}

var xxx_messageInfo_Mode proto.InternalMessageInfo

func (m *Mode) GetType() GameType {
	if m != nil {
		return m.Type
	}
	return GameType_NORMAL_GAME
}

func (m *Mode) GetSoloist() *PlayerValue {
	if m != nil {
		return m.Soloist
	}
	return nil
}

func (m *Mode) GetSpouse() *PlayerValue {
	if m != nil {
		return m.Spouse
	}
	return nil
}

func (m *Mode) GetForehand() string {
	if m != nil {
		return m.Forehand
	}
	return ""
}

type Trick struct {
	Cards                []*Card      `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
	UserIdForehand       string       `protobuf:"bytes,5,opt,name=user_id_forehand,json=userIdForehand,proto3" json:"user_id_forehand,omitempty"`
	UserIdWinner         *PlayerValue `protobuf:"bytes,6,opt,name=user_id_winner,json=userIdWinner,proto3" json:"user_id_winner,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Trick) Reset()         { *m = Trick{} }
func (m *Trick) String() string { return proto.CompactTextString(m) }
func (*Trick) ProtoMessage()    {}
func (*Trick) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{14}
}

func (m *Trick) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trick.Unmarshal(m, b)
}
func (m *Trick) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trick.Marshal(b, m, deterministic)
}
func (m *Trick) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trick.Merge(m, src)
}
func (m *Trick) XXX_Size() int {
	return xxx_messageInfo_Trick.Size(m)
}
func (m *Trick) XXX_DiscardUnknown() {
	xxx_messageInfo_Trick.DiscardUnknown(m)
}

var xxx_messageInfo_Trick proto.InternalMessageInfo

func (m *Trick) GetCards() []*Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *Trick) GetUserIdForehand() string {
	if m != nil {
		return m.UserIdForehand
	}
	return ""
}

func (m *Trick) GetUserIdWinner() *PlayerValue {
	if m != nil {
		return m.UserIdWinner
	}
	return nil
}

type GameState struct {
	Bids                 []*Bid   `protobuf:"bytes,1,rep,name=bids,proto3" json:"bids,omitempty"`
	CompletedTricks      int32    `protobuf:"varint,2,opt,name=completed_tricks,json=completedTricks,proto3" json:"completed_tricks,omitempty"`
	CurrentTrick         *Trick   `protobuf:"bytes,3,opt,name=current_trick,json=currentTrick,proto3" json:"current_trick,omitempty"`
	PreviousTrick        *Trick   `protobuf:"bytes,4,opt,name=previous_trick,json=previousTrick,proto3" json:"previous_trick,omitempty"`
	Mode                 *Mode    `protobuf:"bytes,5,opt,name=mode,proto3" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameState) Reset()         { *m = GameState{} }
func (m *GameState) String() string { return proto.CompactTextString(m) }
func (*GameState) ProtoMessage()    {}
func (*GameState) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{15}
}

func (m *GameState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameState.Unmarshal(m, b)
}
func (m *GameState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameState.Marshal(b, m, deterministic)
}
func (m *GameState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameState.Merge(m, src)
}
func (m *GameState) XXX_Size() int {
	return xxx_messageInfo_GameState.Size(m)
}
func (m *GameState) XXX_DiscardUnknown() {
	xxx_messageInfo_GameState.DiscardUnknown(m)
}

var xxx_messageInfo_GameState proto.InternalMessageInfo

func (m *GameState) GetBids() []*Bid {
	if m != nil {
		return m.Bids
	}
	return nil
}

func (m *GameState) GetCompletedTricks() int32 {
	if m != nil {
		return m.CompletedTricks
	}
	return 0
}

func (m *GameState) GetCurrentTrick() *Trick {
	if m != nil {
		return m.CurrentTrick
	}
	return nil
}

func (m *GameState) GetPreviousTrick() *Trick {
	if m != nil {
		return m.PreviousTrick
	}
	return nil
}

func (m *GameState) GetMode() *Mode {
	if m != nil {
		return m.Mode
	}
	return nil
}

type Cards struct {
	Cards                []*Card  `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cards) Reset()         { *m = Cards{} }
func (m *Cards) String() string { return proto.CompactTextString(m) }
func (*Cards) ProtoMessage()    {}
func (*Cards) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{16}
}

func (m *Cards) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cards.Unmarshal(m, b)
}
func (m *Cards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cards.Marshal(b, m, deterministic)
}
func (m *Cards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cards.Merge(m, src)
}
func (m *Cards) XXX_Size() int {
	return xxx_messageInfo_Cards.Size(m)
}
func (m *Cards) XXX_DiscardUnknown() {
	xxx_messageInfo_Cards.DiscardUnknown(m)
}

var xxx_messageInfo_Cards proto.InternalMessageInfo

func (m *Cards) GetCards() []*Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

type MatchState struct {
	Phase   MatchPhase   `protobuf:"varint,1,opt,name=phase,proto3,enum=api.MatchPhase" json:"phase,omitempty"`
	Turn    *PlayerValue `protobuf:"bytes,2,opt,name=turn,proto3" json:"turn,omitempty"`
	Players *Players     `protobuf:"bytes,3,opt,name=players,proto3" json:"players,omitempty"`
	// Types that are valid to be assigned to Role:
	//	*MatchState_Spectator
	//	*MatchState_OwnCards
	Role isMatchState_Role `protobuf_oneof:"role"`
	// Types that are valid to be assigned to Details:
	//	*MatchState_AuctionState
	//	*MatchState_GameState
	Details              isMatchState_Details `protobuf_oneof:"details"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MatchState) Reset()         { *m = MatchState{} }
func (m *MatchState) String() string { return proto.CompactTextString(m) }
func (*MatchState) ProtoMessage()    {}
func (*MatchState) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{17}
}

func (m *MatchState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchState.Unmarshal(m, b)
}
func (m *MatchState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchState.Marshal(b, m, deterministic)
}
func (m *MatchState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchState.Merge(m, src)
}
func (m *MatchState) XXX_Size() int {
	return xxx_messageInfo_MatchState.Size(m)
}
func (m *MatchState) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchState.DiscardUnknown(m)
}

var xxx_messageInfo_MatchState proto.InternalMessageInfo

func (m *MatchState) GetPhase() MatchPhase {
	if m != nil {
		return m.Phase
	}
	return MatchPhase_AUCTION
}

func (m *MatchState) GetTurn() *PlayerValue {
	if m != nil {
		return m.Turn
	}
	return nil
}

func (m *MatchState) GetPlayers() *Players {
	if m != nil {
		return m.Players
	}
	return nil
}

type isMatchState_Role interface {
	isMatchState_Role()
}

type MatchState_Spectator struct {
	Spectator *Empty `protobuf:"bytes,4,opt,name=spectator,proto3,oneof"`
}

type MatchState_OwnCards struct {
	OwnCards *Cards `protobuf:"bytes,5,opt,name=own_cards,json=ownCards,proto3,oneof"`
}

func (*MatchState_Spectator) isMatchState_Role() {}

func (*MatchState_OwnCards) isMatchState_Role() {}

func (m *MatchState) GetRole() isMatchState_Role {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *MatchState) GetSpectator() *Empty {
	if x, ok := m.GetRole().(*MatchState_Spectator); ok {
		return x.Spectator
	}
	return nil
}

func (m *MatchState) GetOwnCards() *Cards {
	if x, ok := m.GetRole().(*MatchState_OwnCards); ok {
		return x.OwnCards
	}
	return nil
}

type isMatchState_Details interface {
	isMatchState_Details()
}

type MatchState_AuctionState struct {
	AuctionState *AuctionState `protobuf:"bytes,6,opt,name=auction_state,json=auctionState,proto3,oneof"`
}

type MatchState_GameState struct {
	GameState *GameState `protobuf:"bytes,7,opt,name=game_state,json=gameState,proto3,oneof"`
}

func (*MatchState_AuctionState) isMatchState_Details() {}

func (*MatchState_GameState) isMatchState_Details() {}

func (m *MatchState) GetDetails() isMatchState_Details {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *MatchState) GetAuctionState() *AuctionState {
	if x, ok := m.GetDetails().(*MatchState_AuctionState); ok {
		return x.AuctionState
	}
	return nil
}

func (m *MatchState) GetGameState() *GameState {
	if x, ok := m.GetDetails().(*MatchState_GameState); ok {
		return x.GameState
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MatchState) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MatchState_Spectator)(nil),
		(*MatchState_OwnCards)(nil),
		(*MatchState_AuctionState)(nil),
		(*MatchState_GameState)(nil),
	}
}

type Players struct {
	UserIdSelf           string   `protobuf:"bytes,1,opt,name=user_id_self,json=userIdSelf,proto3" json:"user_id_self,omitempty"`
	UserIdLeft           string   `protobuf:"bytes,2,opt,name=user_id_left,json=userIdLeft,proto3" json:"user_id_left,omitempty"`
	UserIdFace           string   `protobuf:"bytes,3,opt,name=user_id_face,json=userIdFace,proto3" json:"user_id_face,omitempty"`
	UserIdRight          string   `protobuf:"bytes,4,opt,name=user_id_right,json=userIdRight,proto3" json:"user_id_right,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Players) Reset()         { *m = Players{} }
func (m *Players) String() string { return proto.CompactTextString(m) }
func (*Players) ProtoMessage()    {}
func (*Players) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{18}
}

func (m *Players) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Players.Unmarshal(m, b)
}
func (m *Players) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Players.Marshal(b, m, deterministic)
}
func (m *Players) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Players.Merge(m, src)
}
func (m *Players) XXX_Size() int {
	return xxx_messageInfo_Players.Size(m)
}
func (m *Players) XXX_DiscardUnknown() {
	xxx_messageInfo_Players.DiscardUnknown(m)
}

var xxx_messageInfo_Players proto.InternalMessageInfo

func (m *Players) GetUserIdSelf() string {
	if m != nil {
		return m.UserIdSelf
	}
	return ""
}

func (m *Players) GetUserIdLeft() string {
	if m != nil {
		return m.UserIdLeft
	}
	return ""
}

func (m *Players) GetUserIdFace() string {
	if m != nil {
		return m.UserIdFace
	}
	return ""
}

func (m *Players) GetUserIdRight() string {
	if m != nil {
		return m.UserIdRight
	}
	return ""
}

type TableData struct {
	TableId              string         `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	Owner                string         `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	InviteCode           string         `protobuf:"bytes,3,opt,name=invite_code,json=inviteCode,proto3" json:"invite_code,omitempty"`
	Members              []*TableMember `protobuf:"bytes,4,rep,name=members,proto3" json:"members,omitempty"`
	Created              *Timestamp     `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TableData) Reset()         { *m = TableData{} }
func (m *TableData) String() string { return proto.CompactTextString(m) }
func (*TableData) ProtoMessage()    {}
func (*TableData) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{19}
}

func (m *TableData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableData.Unmarshal(m, b)
}
func (m *TableData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableData.Marshal(b, m, deterministic)
}
func (m *TableData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableData.Merge(m, src)
}
func (m *TableData) XXX_Size() int {
	return xxx_messageInfo_TableData.Size(m)
}
func (m *TableData) XXX_DiscardUnknown() {
	xxx_messageInfo_TableData.DiscardUnknown(m)
}

var xxx_messageInfo_TableData proto.InternalMessageInfo

func (m *TableData) GetTableId() string {
	if m != nil {
		return m.TableId
	}
	return ""
}

func (m *TableData) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *TableData) GetInviteCode() string {
	if m != nil {
		return m.InviteCode
	}
	return ""
}

func (m *TableData) GetMembers() []*TableMember {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *TableData) GetCreated() *Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

type Timestamp struct {
	Nanos                int64    `protobuf:"varint,1,opt,name=nanos,proto3" json:"nanos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Timestamp) Reset()         { *m = Timestamp{} }
func (m *Timestamp) String() string { return proto.CompactTextString(m) }
func (*Timestamp) ProtoMessage()    {}
func (*Timestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{20}
}

func (m *Timestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Timestamp.Unmarshal(m, b)
}
func (m *Timestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Timestamp.Marshal(b, m, deterministic)
}
func (m *Timestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Timestamp.Merge(m, src)
}
func (m *Timestamp) XXX_Size() int {
	return xxx_messageInfo_Timestamp.Size(m)
}
func (m *Timestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_Timestamp.DiscardUnknown(m)
}

var xxx_messageInfo_Timestamp proto.InternalMessageInfo

func (m *Timestamp) GetNanos() int64 {
	if m != nil {
		return m.Nanos
	}
	return 0
}

type TableState struct {
	Phase                TablePhase  `protobuf:"varint,1,opt,name=phase,proto3,enum=api.TablePhase" json:"phase,omitempty"`
	CurrentMatch         *MatchState `protobuf:"bytes,2,opt,name=current_match,json=currentMatch,proto3" json:"current_match,omitempty"`
	Data                 *TableData  `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TableState) Reset()         { *m = TableState{} }
func (m *TableState) String() string { return proto.CompactTextString(m) }
func (*TableState) ProtoMessage()    {}
func (*TableState) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{21}
}

func (m *TableState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableState.Unmarshal(m, b)
}
func (m *TableState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableState.Marshal(b, m, deterministic)
}
func (m *TableState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableState.Merge(m, src)
}
func (m *TableState) XXX_Size() int {
	return xxx_messageInfo_TableState.Size(m)
}
func (m *TableState) XXX_DiscardUnknown() {
	xxx_messageInfo_TableState.DiscardUnknown(m)
}

var xxx_messageInfo_TableState proto.InternalMessageInfo

func (m *TableState) GetPhase() TablePhase {
	if m != nil {
		return m.Phase
	}
	return TablePhase_NOT_STARTED
}

func (m *TableState) GetCurrentMatch() *MatchState {
	if m != nil {
		return m.CurrentMatch
	}
	return nil
}

func (m *TableState) GetData() *TableData {
	if m != nil {
		return m.Data
	}
	return nil
}

type TableMember struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Online               bool     `protobuf:"varint,3,opt,name=online,proto3" json:"online,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TableMember) Reset()         { *m = TableMember{} }
func (m *TableMember) String() string { return proto.CompactTextString(m) }
func (*TableMember) ProtoMessage()    {}
func (*TableMember) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{22}
}

func (m *TableMember) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableMember.Unmarshal(m, b)
}
func (m *TableMember) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableMember.Marshal(b, m, deterministic)
}
func (m *TableMember) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableMember.Merge(m, src)
}
func (m *TableMember) XXX_Size() int {
	return xxx_messageInfo_TableMember.Size(m)
}
func (m *TableMember) XXX_DiscardUnknown() {
	xxx_messageInfo_TableMember.DiscardUnknown(m)
}

var xxx_messageInfo_TableMember proto.InternalMessageInfo

func (m *TableMember) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *TableMember) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TableMember) GetOnline() bool {
	if m != nil {
		return m.Online
	}
	return false
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{23}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type UserName struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserName) Reset()         { *m = UserName{} }
func (m *UserName) String() string { return proto.CompactTextString(m) }
func (*UserName) ProtoMessage()    {}
func (*UserName) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{24}
}

func (m *UserName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserName.Unmarshal(m, b)
}
func (m *UserName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserName.Marshal(b, m, deterministic)
}
func (m *UserName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserName.Merge(m, src)
}
func (m *UserName) XXX_Size() int {
	return xxx_messageInfo_UserName.Size(m)
}
func (m *UserName) XXX_DiscardUnknown() {
	xxx_messageInfo_UserName.DiscardUnknown(m)
}

var xxx_messageInfo_UserName proto.InternalMessageInfo

func (m *UserName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type RegisterReply struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Secret               string   `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterReply) Reset()         { *m = RegisterReply{} }
func (m *RegisterReply) String() string { return proto.CompactTextString(m) }
func (*RegisterReply) ProtoMessage()    {}
func (*RegisterReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{25}
}

func (m *RegisterReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterReply.Unmarshal(m, b)
}
func (m *RegisterReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterReply.Marshal(b, m, deterministic)
}
func (m *RegisterReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterReply.Merge(m, src)
}
func (m *RegisterReply) XXX_Size() int {
	return xxx_messageInfo_RegisterReply.Size(m)
}
func (m *RegisterReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterReply.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterReply proto.InternalMessageInfo

func (m *RegisterReply) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RegisterReply) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

type TableId struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TableId) Reset()         { *m = TableId{} }
func (m *TableId) String() string { return proto.CompactTextString(m) }
func (*TableId) ProtoMessage()    {}
func (*TableId) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{26}
}

func (m *TableId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableId.Unmarshal(m, b)
}
func (m *TableId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableId.Marshal(b, m, deterministic)
}
func (m *TableId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableId.Merge(m, src)
}
func (m *TableId) XXX_Size() int {
	return xxx_messageInfo_TableId.Size(m)
}
func (m *TableId) XXX_DiscardUnknown() {
	xxx_messageInfo_TableId.DiscardUnknown(m)
}

var xxx_messageInfo_TableId proto.InternalMessageInfo

func (m *TableId) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type JoinTableRequest struct {
	InviteCode           string   `protobuf:"bytes,1,opt,name=invite_code,json=inviteCode,proto3" json:"invite_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinTableRequest) Reset()         { *m = JoinTableRequest{} }
func (m *JoinTableRequest) String() string { return proto.CompactTextString(m) }
func (*JoinTableRequest) ProtoMessage()    {}
func (*JoinTableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0bc0186a2594950, []int{27}
}

func (m *JoinTableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinTableRequest.Unmarshal(m, b)
}
func (m *JoinTableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinTableRequest.Marshal(b, m, deterministic)
}
func (m *JoinTableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinTableRequest.Merge(m, src)
}
func (m *JoinTableRequest) XXX_Size() int {
	return xxx_messageInfo_JoinTableRequest.Size(m)
}
func (m *JoinTableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinTableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JoinTableRequest proto.InternalMessageInfo

func (m *JoinTableRequest) GetInviteCode() string {
	if m != nil {
		return m.InviteCode
	}
	return ""
}

func init() {
	proto.RegisterEnum("api.MemberEventType", MemberEventType_name, MemberEventType_value)
	proto.RegisterEnum("api.TablePhase", TablePhase_name, TablePhase_value)
	proto.RegisterEnum("api.MatchPhase", MatchPhase_name, MatchPhase_value)
	proto.RegisterEnum("api.Suit", Suit_name, Suit_value)
	proto.RegisterEnum("api.Rank", Rank_name, Rank_value)
	proto.RegisterEnum("api.Party", Party_name, Party_value)
	proto.RegisterEnum("api.BidType", BidType_name, BidType_value)
	proto.RegisterEnum("api.GameType", GameType_name, GameType_value)
	proto.RegisterType((*Card)(nil), "api.Card")
	proto.RegisterType((*PlayerValue)(nil), "api.PlayerValue")
	proto.RegisterType((*Declaration)(nil), "api.Declaration")
	proto.RegisterType((*PlayedCard)(nil), "api.PlayedCard")
	proto.RegisterType((*Bid)(nil), "api.Bid")
	proto.RegisterType((*EndOfGame)(nil), "api.EndOfGame")
	proto.RegisterType((*Event)(nil), "api.Event")
	proto.RegisterType((*UserState)(nil), "api.UserState")
	proto.RegisterType((*MemberEvent)(nil), "api.MemberEvent")
	proto.RegisterType((*PlayCardRequest)(nil), "api.PlayCardRequest")
	proto.RegisterType((*PlaceBidRequest)(nil), "api.PlaceBidRequest")
	proto.RegisterType((*DeclareRequest)(nil), "api.DeclareRequest")
	proto.RegisterType((*AuctionState)(nil), "api.AuctionState")
	proto.RegisterType((*Mode)(nil), "api.Mode")
	proto.RegisterType((*Trick)(nil), "api.Trick")
	proto.RegisterType((*GameState)(nil), "api.GameState")
	proto.RegisterType((*Cards)(nil), "api.Cards")
	proto.RegisterType((*MatchState)(nil), "api.MatchState")
	proto.RegisterType((*Players)(nil), "api.Players")
	proto.RegisterType((*TableData)(nil), "api.TableData")
	proto.RegisterType((*Timestamp)(nil), "api.Timestamp")
	proto.RegisterType((*TableState)(nil), "api.TableState")
	proto.RegisterType((*TableMember)(nil), "api.TableMember")
	proto.RegisterType((*Empty)(nil), "api.Empty")
	proto.RegisterType((*UserName)(nil), "api.UserName")
	proto.RegisterType((*RegisterReply)(nil), "api.RegisterReply")
	proto.RegisterType((*TableId)(nil), "api.TableId")
	proto.RegisterType((*JoinTableRequest)(nil), "api.JoinTableRequest")
}

func init() {
	proto.RegisterFile("api/karlchen.proto", fileDescriptor_d0bc0186a2594950)
}

var fileDescriptor_d0bc0186a2594950 = []byte{
	// 1850 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x58, 0x4f, 0x73, 0xe3, 0x48,
	0x15, 0x97, 0x6c, 0xc9, 0xb2, 0x9e, 0x1d, 0x47, 0xdb, 0x3b, 0x40, 0x08, 0x3b, 0x3b, 0xb3, 0x2a,
	0x18, 0x32, 0x06, 0x26, 0x6c, 0xb2, 0xb0, 0x9c, 0xa8, 0x92, 0x6d, 0x25, 0xf6, 0xac, 0x63, 0xcf,
	0xb6, 0x35, 0x3b, 0xcc, 0x5e, 0x54, 0x8a, 0xd5, 0x49, 0x54, 0xb1, 0x25, 0x23, 0xc9, 0x49, 0xe5,
	0xc8, 0x95, 0x2a, 0x4e, 0x1c, 0xf9, 0x18, 0x5c, 0xb8, 0x71, 0xe5, 0x13, 0xc0, 0xd7, 0xa1, 0xfa,
	0x75, 0x4b, 0x56, 0x3c, 0x93, 0x99, 0xda, 0x9b, 0xdf, 0x7b, 0xbf, 0x7e, 0xaf, 0xdf, 0xdf, 0x7e,
	0x32, 0x90, 0x60, 0x15, 0x1d, 0x5e, 0x07, 0xe9, 0x62, 0x7e, 0xc5, 0xe2, 0x17, 0xab, 0x34, 0xc9,
	0x13, 0x52, 0x0f, 0x56, 0x91, 0x3d, 0x00, 0xad, 0x1f, 0xa4, 0x21, 0x79, 0x0c, 0x5a, 0xb6, 0x8e,
	0xf2, 0x3d, 0xf5, 0xa9, 0x7a, 0xd0, 0x39, 0x32, 0x5f, 0x04, 0xab, 0xe8, 0xc5, 0x6c, 0x1d, 0xe5,
	0x14, 0xd9, 0x5c, 0x9c, 0x06, 0xf1, 0xf5, 0x5e, 0xad, 0x22, 0xa6, 0x41, 0x7c, 0x4d, 0x91, 0x6d,
	0x3f, 0x83, 0xd6, 0xab, 0x45, 0x70, 0xc7, 0xd2, 0xef, 0x82, 0xc5, 0x9a, 0x91, 0x9f, 0x80, 0xb1,
	0xce, 0x58, 0xea, 0x47, 0x21, 0xea, 0x33, 0x69, 0x83, 0x93, 0xa3, 0xd0, 0xbe, 0x83, 0xd6, 0x80,
	0xcd, 0x17, 0x41, 0x1a, 0xe4, 0x51, 0x12, 0x3f, 0x88, 0x23, 0x9f, 0x81, 0x79, 0x93, 0xa4, 0xe7,
	0xec, 0x2a, 0x58, 0xe4, 0x68, 0xb3, 0x49, 0x37, 0x0c, 0x72, 0x0c, 0xbb, 0x21, 0xbb, 0x88, 0x62,
	0x16, 0x9e, 0x06, 0x4b, 0x76, 0x96, 0x84, 0x6c, 0xaf, 0xfe, 0x54, 0x3d, 0x68, 0xc9, 0x7b, 0x71,
	0x06, 0xdd, 0x46, 0xd8, 0x77, 0x00, 0x78, 0xc5, 0x10, 0xdd, 0x7d, 0xd0, 0xf2, 0x63, 0xd0, 0xe6,
	0x41, 0x1a, 0xa2, 0xd1, 0x42, 0x21, 0x3f, 0x41, 0x91, 0x4d, 0x8e, 0xa1, 0x9d, 0xa7, 0xd1, 0xfc,
	0xda, 0xbf, 0x8d, 0xe2, 0x98, 0xa5, 0xd2, 0xae, 0x85, 0xb0, 0x4a, 0x04, 0x68, 0x0b, 0x51, 0x6f,
	0x10, 0x64, 0xff, 0x11, 0xea, 0xbd, 0xe8, 0x03, 0x36, 0x3f, 0x87, 0xfa, 0x79, 0x14, 0xa2, 0xae,
	0xce, 0x51, 0x1b, 0x75, 0xf5, 0xa2, 0xd0, 0xbb, 0x5b, 0x31, 0xca, 0x05, 0xb6, 0x0b, 0xa6, 0x1b,
	0x87, 0xd3, 0x0b, 0xee, 0x0b, 0xb1, 0xa1, 0x21, 0x6d, 0x8b, 0x54, 0x81, 0xb0, 0x1d, 0xa4, 0xf9,
	0x1d, 0x95, 0x12, 0xf2, 0x08, 0xf4, 0x1b, 0x7e, 0x0d, 0xf4, 0x42, 0xa7, 0x82, 0xb0, 0xff, 0x53,
	0x03, 0xdd, 0xbd, 0x61, 0x71, 0x4e, 0xba, 0x60, 0xdc, 0xb2, 0xc5, 0x3c, 0x59, 0x32, 0x54, 0xd2,
	0x3a, 0xea, 0xa0, 0x92, 0xd7, 0x19, 0x4b, 0x67, 0x79, 0x90, 0xb3, 0xa1, 0x42, 0x0b, 0x00, 0xf9,
	0x25, 0xe8, 0x59, 0x1e, 0xa4, 0xb9, 0x8c, 0xc8, 0xae, 0x08, 0x71, 0x90, 0xcf, 0xaf, 0x0a, 0xa8,
	0x90, 0x93, 0x17, 0xd0, 0x0c, 0x31, 0xb7, 0x2c, 0xbc, 0x17, 0x96, 0x4a, 0xc2, 0x87, 0x0a, 0x2d,
	0x31, 0xe4, 0x08, 0x5a, 0x2b, 0x4c, 0x88, 0x8f, 0x01, 0xd7, 0x2a, 0xea, 0x37, 0x89, 0x1a, 0x2a,
	0x14, 0x56, 0x9b, 0xb4, 0x3d, 0x07, 0x4e, 0xcd, 0x59, 0xe8, 0xf3, 0x80, 0xe9, 0x78, 0xa4, 0x59,
	0x04, 0x6c, 0xa8, 0x50, 0x53, 0x48, 0x79, 0xb4, 0x9f, 0x81, 0xce, 0xe2, 0x90, 0x85, 0x7b, 0x8d,
	0x8a, 0x87, 0x65, 0x18, 0xf9, 0xb5, 0x51, 0x4c, 0xba, 0xd0, 0x58, 0xb2, 0xe5, 0x39, 0x4b, 0xf7,
	0x8c, 0xca, 0xa5, 0xcf, 0x90, 0x85, 0xd1, 0x1a, 0x2a, 0x54, 0x22, 0x7a, 0x06, 0xe8, 0x8c, 0xb3,
	0x6c, 0x0f, 0xcc, 0x32, 0x58, 0xbc, 0x26, 0xe6, 0xeb, 0x34, 0x65, 0x71, 0xee, 0x05, 0xe7, 0x8b,
	0x22, 0xa4, 0xc2, 0x13, 0xe4, 0x20, 0x8c, 0xde, 0x03, 0x11, 0x02, 0x5a, 0x1c, 0x2c, 0x45, 0x86,
	0x4c, 0x8a, 0xbf, 0xed, 0x10, 0x5a, 0x15, 0xbb, 0x0f, 0xd7, 0xcb, 0x7b, 0xce, 0x92, 0x03, 0xd0,
	0xf2, 0xbb, 0x15, 0x93, 0x45, 0xf4, 0x68, 0xdb, 0x09, 0x2c, 0x26, 0x44, 0xd8, 0x27, 0xb0, 0xcb,
	0xe3, 0x8b, 0x45, 0xcd, 0xfe, 0xbc, 0x66, 0x59, 0xce, 0xeb, 0x25, 0x2f, 0xaf, 0x6e, 0x52, 0x41,
	0x7c, 0xa4, 0x15, 0xec, 0x53, 0xd4, 0x33, 0x67, 0xbd, 0xe8, 0x23, 0x7a, 0x64, 0x79, 0xd7, 0x1e,
	0x2a, 0xef, 0x37, 0xd0, 0x11, 0x35, 0xc2, 0x3e, 0xac, 0xe7, 0x10, 0x5a, 0xe1, 0xa6, 0x96, 0xa4,
	0xbe, 0x1d, 0xd4, 0xc7, 0x53, 0x8a, 0x0a, 0xab, 0x08, 0x7b, 0x00, 0x6d, 0x67, 0x3d, 0xe7, 0x3f,
	0x45, 0xa2, 0xbe, 0x82, 0x76, 0x45, 0x9c, 0xed, 0xa9, 0x4f, 0xeb, 0xef, 0xab, 0x52, 0x7a, 0x0f,
	0x65, 0xff, 0x43, 0x05, 0x8d, 0x4f, 0x10, 0xf2, 0x85, 0x0c, 0xb1, 0xfa, 0x3e, 0xc3, 0x28, 0xe2,
	0x8d, 0x95, 0x25, 0x8b, 0x24, 0xca, 0x8a, 0x76, 0x79, 0x77, 0x32, 0x14, 0x00, 0x72, 0x00, 0x8d,
	0x6c, 0x95, 0xac, 0x33, 0xf6, 0xe0, 0x10, 0x91, 0x72, 0xb2, 0x0f, 0xcd, 0x8b, 0x24, 0x65, 0x57,
	0x41, 0x2c, 0xda, 0xc4, 0xa4, 0x25, 0x6d, 0xff, 0x55, 0x05, 0xdd, 0xe3, 0xb3, 0x86, 0x3c, 0x01,
	0x9d, 0xe7, 0xa5, 0x70, 0xab, 0x92, 0x2f, 0xc1, 0x27, 0x07, 0x60, 0xc9, 0x7a, 0xf2, 0x4b, 0x75,
	0x3a, 0xaa, 0xeb, 0x88, 0xc2, 0x3a, 0x91, 0x5c, 0xf2, 0x7b, 0xe8, 0x14, 0x48, 0x39, 0x6b, 0x1a,
	0x0f, 0x5c, 0xb1, 0x2d, 0x4e, 0xca, 0x41, 0xf7, 0x3f, 0x15, 0x4c, 0x1e, 0x11, 0x11, 0xee, 0xcf,
	0x40, 0x3b, 0x8f, 0xca, 0xfb, 0x94, 0x6d, 0x4a, 0x91, 0x4b, 0x9e, 0x83, 0x35, 0x4f, 0x96, 0xab,
	0x05, 0xcb, 0x59, 0xe8, 0xe3, 0xb4, 0xcc, 0xe4, 0xb8, 0xda, 0x2d, 0xf9, 0xe8, 0x58, 0x46, 0x0e,
	0x61, 0x47, 0xf6, 0x8e, 0x00, 0xca, 0x80, 0x89, 0xc9, 0x87, 0x98, 0x4d, 0x73, 0x61, 0x28, 0xbe,
	0x84, 0xce, 0x2a, 0x65, 0x37, 0x51, 0xb2, 0xce, 0xe4, 0x09, 0xed, 0x9d, 0x13, 0x3b, 0x05, 0x42,
	0x1c, 0x79, 0x0c, 0xda, 0x92, 0x3f, 0x24, 0xfa, 0xf6, 0x43, 0x82, 0x6c, 0xfb, 0x00, 0xf4, 0x3e,
	0x06, 0xf1, 0x63, 0x51, 0xb6, 0xff, 0x5b, 0x03, 0xd8, 0x8c, 0x47, 0xf2, 0x0b, 0xd0, 0x57, 0x57,
	0x41, 0x56, 0x54, 0x4d, 0x65, 0x7c, 0xbe, 0xe2, 0x6c, 0x2a, 0xa4, 0xe4, 0xe7, 0xa0, 0xe5, 0xeb,
	0x34, 0x7e, 0xb0, 0x6a, 0x50, 0x4a, 0x9e, 0x81, 0x81, 0xc3, 0x30, 0xcd, 0x64, 0x08, 0xda, 0x15,
	0x60, 0x46, 0x0b, 0x21, 0xe9, 0x82, 0x99, 0xad, 0xd8, 0x3c, 0x0f, 0xf2, 0x24, 0xbd, 0xe7, 0xba,
	0xbb, 0x5c, 0xe5, 0x77, 0x7c, 0x4e, 0x96, 0x62, 0xf2, 0x1c, 0xcc, 0xe4, 0x36, 0xf6, 0x85, 0x53,
	0x7a, 0x05, 0x8b, 0xfe, 0xf2, 0x89, 0x9d, 0xdc, 0xc6, 0xc2, 0xf7, 0x3f, 0xc0, 0x4e, 0x20, 0xfa,
	0xc9, 0xcf, 0xb8, 0x73, 0xb2, 0x2a, 0x3e, 0x41, 0x78, 0xb5, 0xd3, 0x86, 0x2a, 0x6d, 0x07, 0xd5,
	0xce, 0x3b, 0x04, 0xb8, 0x0c, 0x96, 0x4c, 0x1e, 0x33, 0x2a, 0x13, 0xb9, 0x2c, 0x97, 0xa1, 0x4a,
	0xcd, 0xcb, 0x82, 0xe8, 0x35, 0x40, 0x4b, 0x93, 0x05, 0xeb, 0x99, 0x60, 0x84, 0x2c, 0x0f, 0xa2,
	0x45, 0x66, 0xff, 0x5d, 0x05, 0x43, 0x7a, 0x4a, 0x9e, 0x42, 0xbb, 0x28, 0xd0, 0x8c, 0x2d, 0x2e,
	0xe4, 0x9c, 0x00, 0x51, 0x8c, 0x33, 0xb6, 0xb8, 0xa8, 0x22, 0x16, 0xec, 0x22, 0x97, 0xb3, 0x52,
	0x22, 0xc6, 0xec, 0x22, 0xaf, 0x22, 0x2e, 0x82, 0xb9, 0xe8, 0xc2, 0x12, 0x71, 0x12, 0xcc, 0xf9,
	0x53, 0xbb, 0x53, 0x20, 0xd2, 0xe8, 0xf2, 0x2a, 0x97, 0xcd, 0xd7, 0x12, 0x10, 0xca, 0x59, 0xf6,
	0x3f, 0x55, 0x30, 0x71, 0xa2, 0x0f, 0x82, 0x3c, 0x20, 0x3f, 0x85, 0x26, 0xce, 0xaa, 0xcd, 0xcc,
	0x36, 0x90, 0x1e, 0x85, 0x7c, 0xa6, 0x25, 0xb7, 0xbc, 0x95, 0xc4, 0x4d, 0x04, 0x41, 0x9e, 0x40,
	0x2b, 0x8a, 0x6f, 0xa2, 0x9c, 0xf9, 0xf3, 0x62, 0x8d, 0x31, 0x29, 0x08, 0x56, 0x9f, 0x0f, 0x9d,
	0x2e, 0x18, 0xe2, 0xf1, 0xc9, 0xf6, 0xb4, 0xca, 0xb8, 0x42, 0x93, 0x62, 0xbe, 0xd3, 0x02, 0x40,
	0x0e, 0xc0, 0x98, 0xa7, 0x2c, 0xc8, 0x59, 0xf1, 0x34, 0x8a, 0x10, 0x7b, 0xd1, 0x92, 0x65, 0x79,
	0xb0, 0x5c, 0xd1, 0x42, 0x6c, 0x7f, 0x01, 0x66, 0xc9, 0xe5, 0x37, 0x8b, 0x83, 0x38, 0xc9, 0xf0,
	0xc6, 0x75, 0x2a, 0x08, 0xfb, 0x6f, 0x2a, 0xc0, 0xe6, 0xf5, 0x7a, 0x7f, 0x1d, 0xa3, 0xfc, 0x5e,
	0x1d, 0x7f, 0xb5, 0x69, 0xd5, 0x25, 0x2f, 0xf2, 0x07, 0xb6, 0x86, 0xb2, 0x5f, 0x91, 0x45, 0x6c,
	0xd0, 0xc2, 0x20, 0x0f, 0x64, 0x51, 0x77, 0x36, 0xba, 0x79, 0x50, 0x29, 0xca, 0x6c, 0x0a, 0xad,
	0x8a, 0xd3, 0x3f, 0xec, 0x71, 0xfc, 0x31, 0x34, 0x92, 0x78, 0x11, 0xc5, 0x22, 0xc0, 0x4d, 0x2a,
	0x29, 0xdb, 0x00, 0x1d, 0x3b, 0xc2, 0xfe, 0x1c, 0x9a, 0xfc, 0x3d, 0x9f, 0x70, 0x70, 0xa1, 0x40,
	0xad, 0xbc, 0xcc, 0x5f, 0xc3, 0x0e, 0x65, 0x97, 0x51, 0x96, 0xb3, 0x94, 0xb2, 0xd5, 0xe2, 0x8e,
	0x74, 0xa0, 0x56, 0x5a, 0xae, 0x45, 0x21, 0xb7, 0x90, 0xb1, 0x79, 0xca, 0x8a, 0x42, 0x93, 0x94,
	0xfd, 0x04, 0x0c, 0x6f, 0x53, 0x00, 0x62, 0x29, 0x93, 0x8f, 0x9a, 0x58, 0xca, 0x8e, 0xc1, 0x7a,
	0x99, 0x44, 0x31, 0x82, 0x8a, 0xe7, 0x6f, 0xab, 0x28, 0xd4, 0xed, 0xa2, 0xe8, 0x7e, 0x0b, 0xbb,
	0x5b, 0x6f, 0x3b, 0xe9, 0x00, 0xbc, 0x9c, 0x8e, 0x26, 0xbe, 0xe7, 0xf4, 0xc6, 0xae, 0xa5, 0x90,
	0x5d, 0x68, 0x8d, 0x5d, 0xe7, 0x3b, 0x57, 0x32, 0x54, 0x0e, 0x38, 0x9d, 0xfa, 0xd3, 0x93, 0x93,
	0xf1, 0x68, 0xe2, 0x5a, 0x35, 0xb2, 0x03, 0x26, 0xa7, 0x27, 0x48, 0xd6, 0xbb, 0x13, 0x99, 0x6d,
	0xcc, 0x26, 0x3f, 0x3d, 0x99, 0x7a, 0xfe, 0xcc, 0x73, 0xa8, 0xe7, 0x0e, 0x2c, 0x85, 0xb4, 0xc0,
	0x78, 0x35, 0x76, 0xde, 0x8e, 0x26, 0xa7, 0x96, 0x4a, 0x3e, 0x81, 0x9d, 0x9e, 0xeb, 0xbd, 0x71,
	0xdd, 0x89, 0x7f, 0xea, 0x9c, 0xb9, 0x33, 0xab, 0xc6, 0x0f, 0xa0, 0x21, 0xdf, 0x9d, 0x0c, 0xdc,
	0x81, 0x55, 0xef, 0x7e, 0x29, 0xa7, 0xa0, 0xd0, 0xd7, 0x02, 0xc3, 0x79, 0xdd, 0xf7, 0x46, 0xd3,
	0x89, 0xa5, 0x90, 0x26, 0x68, 0xfc, 0x98, 0xa5, 0x92, 0x36, 0x34, 0x4f, 0x46, 0x93, 0xd1, 0x6c,
	0xe8, 0x0e, 0xac, 0x5a, 0xf7, 0x6b, 0xd0, 0xf8, 0x17, 0x07, 0xe7, 0x0e, 0x46, 0xce, 0xd9, 0x74,
	0x32, 0x98, 0x59, 0x0a, 0x01, 0x68, 0x0c, 0x5d, 0x87, 0x7a, 0x33, 0x4b, 0xe5, 0xbf, 0x67, 0xaf,
	0x9c, 0x01, 0x5a, 0x34, 0x41, 0xef, 0x8f, 0x5f, 0xf7, 0x66, 0x56, 0xbd, 0xeb, 0x80, 0xc6, 0xbf,
	0x45, 0xb8, 0xe2, 0x09, 0xf7, 0x06, 0x4d, 0xbc, 0x74, 0xfa, 0xdf, 0x58, 0x2a, 0x87, 0x7d, 0xfb,
	0xda, 0x75, 0x27, 0x56, 0x8d, 0x33, 0xbf, 0xe1, 0x0e, 0xd4, 0x89, 0x01, 0x75, 0xcf, 0x9d, 0x58,
	0x1a, 0xff, 0xe1, 0xf4, 0x5d, 0x4b, 0xef, 0xfe, 0x0c, 0x74, 0x5c, 0xa1, 0x49, 0x03, 0x6a, 0xd4,
	0x15, 0x66, 0xfb, 0xd3, 0x89, 0x47, 0x1d, 0x4b, 0xed, 0xfe, 0x5b, 0x05, 0x43, 0x6e, 0x2c, 0x9c,
	0x4f, 0x5d, 0xbf, 0x37, 0xe2, 0x41, 0xe9, 0x00, 0x08, 0x0c, 0xd2, 0x2a, 0xb1, 0xa0, 0x4d, 0x5d,
	0x7f, 0x32, 0xf5, 0xf9, 0x2d, 0xbc, 0xb7, 0x22, 0x2c, 0x82, 0x33, 0x1b, 0xfd, 0xc9, 0x7b, 0x6b,
	0xd5, 0x37, 0x10, 0x6f, 0x38, 0xa2, 0xde, 0x5b, 0x4b, 0xe3, 0x4a, 0xa8, 0xeb, 0xcf, 0xfa, 0xc3,
	0x37, 0x0e, 0xfd, 0xde, 0xd2, 0xc9, 0x23, 0xb0, 0xa4, 0xd2, 0x8d, 0xa2, 0x06, 0xf9, 0x14, 0x76,
	0x37, 0x5c, 0xa1, 0xcc, 0xb8, 0x0f, 0x95, 0x0a, 0x9b, 0x84, 0x40, 0x47, 0x72, 0x0b, 0xa5, 0x66,
	0xf7, 0x2f, 0x2a, 0x34, 0x8b, 0x55, 0x45, 0x24, 0x97, 0x9e, 0x39, 0x63, 0xcc, 0x9e, 0xa5, 0xf0,
	0x80, 0x9f, 0x39, 0x94, 0x8e, 0x9c, 0x53, 0x57, 0x64, 0xb7, 0x08, 0xbf, 0x3f, 0x9b, 0x8e, 0xa7,
	0xc2, 0x0d, 0x91, 0x03, 0xc1, 0xa8, 0x73, 0x86, 0x48, 0x84, 0x60, 0xa0, 0x17, 0x98, 0x0d, 0x41,
	0xeb, 0x5c, 0xc9, 0x99, 0xeb, 0x78, 0x63, 0x77, 0x26, 0x59, 0x8d, 0xa3, 0x7f, 0xd5, 0x41, 0x1b,
	0x24, 0xd7, 0x09, 0x39, 0x84, 0x66, 0xd1, 0x4c, 0x64, 0xa7, 0xfc, 0xf0, 0xe0, 0xbd, 0xb7, 0x4f,
	0xc4, 0x87, 0x65, 0xb5, 0xd5, 0x6c, 0x85, 0x6f, 0xfd, 0xfd, 0x2b, 0x36, 0xbf, 0x1e, 0x27, 0x97,
	0x51, 0x4c, 0x2a, 0x2f, 0xd9, 0xfe, 0xfd, 0xe3, 0xb6, 0x42, 0x7e, 0x05, 0xad, 0x3e, 0xce, 0x38,
	0xb1, 0x65, 0x57, 0xb1, 0x5b, 0x63, 0xc5, 0x56, 0xc8, 0x6f, 0x00, 0x66, 0xfc, 0xd3, 0x45, 0x60,
	0xdb, 0x1b, 0xf9, 0x28, 0xdc, 0xdf, 0x9e, 0x58, 0xb6, 0x42, 0x7e, 0x07, 0x66, 0xd9, 0xaa, 0xe4,
	0x47, 0x28, 0xdf, 0x6e, 0xdd, 0xfd, 0xed, 0xad, 0xdf, 0x56, 0xc8, 0x31, 0x34, 0x8b, 0x7d, 0x9b,
	0x3c, 0x2a, 0xdf, 0xeb, 0xca, 0xfa, 0xbd, 0xbf, 0xfd, 0xd1, 0x63, 0x2b, 0xe4, 0xd7, 0x78, 0x08,
	0x97, 0xeb, 0xcd, 0xa1, 0xea, 0xae, 0xbd, 0x5f, 0xee, 0x53, 0xb6, 0x42, 0x8e, 0xc0, 0x90, 0x1b,
	0x34, 0xf9, 0xb4, 0xb2, 0xcd, 0x96, 0xb7, 0x7a, 0x67, 0xc5, 0xb5, 0x15, 0xd2, 0x85, 0x36, 0x3a,
	0x3f, 0x63, 0x59, 0xc6, 0xbf, 0xc5, 0xab, 0xa1, 0x92, 0xbf, 0xf1, 0x53, 0x47, 0xf9, 0xad, 0xda,
	0x6b, 0x7c, 0xaf, 0x1d, 0x06, 0xab, 0xe8, 0xbc, 0x81, 0x7f, 0x1c, 0x1c, 0xff, 0x3f, 0x00, 0x00,
	0xff, 0xff, 0x6d, 0x16, 0x7b, 0x1f, 0x4e, 0x10, 0x00, 0x00,
}
